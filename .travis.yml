language: c

dist: focal

os: linux

env:
  global:
  - DOCKER_REGISTRY=ghcr.io
  - DOCKER_REPOSITORY=arm64-compat/redis
  - REDIS_VERSION=6.0-latest
  - OSNIX=bullseye
  - secure: "PT2JzY1TL9rG/wjkaDC3+y/T4aSEWdfEZXqfXtXqATc2izgdZoUXFgxRNyLlOuEzQJPkLSqyBHjvfomKEoZ4+u8yXGCPb7ZWL7po0JGx5wDZBm1a9rVwsdUh9YpY/yzxJCIzpHBK71EnGWDhV/Dno1SYqGRf4EYraY19SbKC+OwyVLfbHlnzuB66BBdlyzRsXB5AqoMjmfZaxihg9kRMLpfCUVyoqdQ3reMZpBJ98ZM6z3BMqYRQ/GpSxTFGIqdkmG7re4NDiGTc8kPBs+Fg4aivk4N7NcHO4xwX6K7Y9Jr7M3c7iimdVP8ZJrn+a5bk0nbwzxYRoGIFxz2+xv1rpFRn5bJkLZV2WFOCRr8Yjn6bx/U1vnvPSkHyL2xSPDeeWk2MwUeYz1AWS/0ZbjOoWsMu9A1CpS0L0IJPSeGhxDPMUSbzHKeBCqD0AZOqIx4PNyzVDBaiMJGjXbXEuTcV5ecJ6oCF06degC+fKLIv3oWUN5YX2GJ6EiVA4E/7ts2taUXJ4auEIHoCCx94Bi3ZuNth5Xfcj2P7/A58DkHzW/faT+uIW1NlOGuyqSEBUB1c2CdEYx/eCkvO3Grp/CsyrOxiM+SBJ/yBOFv+af/pomGG4Elz2gxwtFIQeKPMNZEubIabK26HfgfScBH+XGyte3rXm5LcCmR4IMTWlUPL8wo="
  - secure: "PpLOefqd9YY3sNEBywWDlfe9CQ4vvEflX8Jn+CQwi7nChdNDivJtoV2dGxa0NgYl65IFEyVfFqlHRJG0GuD545h7L5VtmniMye/rhJoWB3a+gi4eJ2Uc633qnYX6kC4fz95DnXlaOgf4YL8yhxj9Rkx6qskfOb6pG+56flkbw66RG+ATLKelnz43RYMK8CeIV9usXXjAVDPqS8EcbPU34dWh7QUlloozYi6PZtCIA6eLo38WeKM96EHRHwLjNnyl04wq2Q2U8JASQEqLJlXEwOVFLrXO12UIY/safmmhVboAcv1t7bUgfIkJJ0wn22KHtGcRdJI6g2U1HTas4IyExkX/GmWvLQ7tPLL6H84KXBEFS+uf+cBvvAMq3LUJIlp5H/XbIljv3c57dgDP/atprrR2bR4T/uWvAL1OPbaUCisKdp04ulwQnUpZqGbbBFvUac7NG6AvcPiSnLnO5iKSen/U1/MFSzUhgMtTd94pkP7XyScYyjXgmFFhjpxUx4rhd3Wd8N9UxUmFyz1/i9G6j6IERzIbB5s3m4NMVGQIfLDr0CLjnZ9pKqCWsy08HIUQUe25SEDCsUnUZhrvACKu62gIc6S87/quepK1HS4hDJ7K1dpj4SLXKia2wmk80d9F4N9qE5R4egqsc9gHewf9KE4iSkkhcQ/05UC2psRyR4g="

stages:
- build

before_script: &common_before_script
- export BUILD_ARCH=$([[ "$TRAVIS_CPU_ARCH" == "arm64" ]] && echo "arm64v8" || echo "x64")
- export DOCKER_REPOSITORY=$DOCKER_REGISTRY/$DOCKER_REPOSITORY
- export DOCKER_TAG=$REDIS_VERSION-$BUILD_ARCH-$OSNIX
- export DOCKER_BUILD="docker build --build-arg BUILD_ARCH=$BUILD_ARCH --build-arg REDIS_VERSION=$REDIS_VERSION --build-arg OSNIX=$OSNIX"

before_deploy:
- echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin $DOCKER_REGISTRY

stages:
- build
- build-stack
- manifest

services:
- docker

jobs:
  include:
  - &redis-bloom
    name: "Build Redis Bloom"
    stage: build
    arch: arm64
    before_script:
    - *common_before_script
    - export REDIS_IMAGE=$DOCKER_REPOSITORY/rebloom:$DOCKER_TAG
    script:
    - $DOCKER_BUILD -t $REDIS_IMAGE -f Dockerfile.redisbloom .
    deploy: &push_image
      provider: script
      on:
        all_branches: true
      script: docker push $REDIS_IMAGE
  - &redis-json
    name: "Build Redis JSON"
    stage: build
    arch: arm64
    before_script:
    - *common_before_script
    - export REDIS_IMAGE=$DOCKER_REPOSITORY/rejson:$DOCKER_TAG
    script:
    - $DOCKER_BUILD -t $REDIS_IMAGE -f Dockerfile.redisjson .
    deploy: *push_image
  - &redis-search
    name: "Build Redis Search"
    stage: build
    arch: arm64
    before_script:
    - *common_before_script
    - export REDIS_IMAGE=$DOCKER_REPOSITORY/research:$DOCKER_TAG
    script:
    - $DOCKER_BUILD -t $REDIS_IMAGE -f Dockerfile.redisearch .
    deploy: *push_image
  - &redis-graph
    name: "Build Redis Graph"
    stage: build
    arch: arm64
    before_script:
    - *common_before_script
    - export REDIS_IMAGE=$DOCKER_REPOSITORY/regraph:$DOCKER_TAG
    script:
    - $DOCKER_BUILD -t $REDIS_IMAGE -f Dockerfile.redisgraph .
    deploy: *push_image
  - &redis-timeseries
    name: "Build Redis Timeseries"
    stage: build
    arch: arm64
    before_script:
    - *common_before_script
    - export REDIS_IMAGE=$DOCKER_REPOSITORY/retimeseries:$DOCKER_TAG
    script:
    - $DOCKER_BUILD -t $REDIS_IMAGE -f Dockerfile.redistimeseries .
    deploy: *push_image
  - <<: *redis-bloom
    arch: amd64
  - <<: *redis-json
    arch: amd64
  - <<: *redis-search
    arch: amd64
  - <<: *redis-graph
    arch: amd64
  - <<: *redis-timeseries
    arch: amd64
  - &redis-stack
    name: "Build Redis Stack"
    stage: build-stack
    arch: arm64
    before_script:
    - *common_before_script
    - export REDIS_IMAGE=$DOCKER_REPOSITORY/redis-stack-server:$DOCKER_TAG
    script:
    - $DOCKER_BUILD -t $REDIS_IMAGE -f Dockerfile.redistack .
    deploy: *push_image
  - <<: *redis-stack
    arch: amd64
  - stage: manifest
    before_script:
    - *common_before_script
    - export DOCKER_TAG=$REDIS_VERSION-$OSNIX
    - export DOCKER_REPOSITORY=$DOCKER_REPOSITORY/redis-stack-server
    - export ARM_TAG=$REDIS_VERSION-arm64v8-$OSNIX
    - export AMD_TAG=$REDIS_VERSION-x64-$OSNIX
    script:
    - docker manifest create $DOCKER_REPOSITORY:$DOCKER_TAG $DOCKER_REPOSITORY:$ARM_TAG $DOCKER_REPOSITORY:$AMD_TAG
    deploy:
      provider: script
      on:
        all_branches: true
      script: docker manifest push $DOCKER_REPOSITORY:$DOCKER_TAG
